---
title: "Read Durable Medical Equipment data"
author: "Alan Jackson"
format: html
editor: source
---

## Read DME data by zipcode from spreadsheet

```{r setup}

library(tidyverse)

inpath <- "/home/ajackson/Dropbox/Rprojects/TexasDioceseCreationCare/Data/Medicare/"
path <- "/home/ajackson/Dropbox/Rprojects/TexasDioceseCreationCare/Data/"
output_path <- "/home/ajackson/Dropbox/projects/CeationCareTaskforce/Medicare/"
Zip_path <- "/home/ajackson/Dropbox/Rprojects/Curated_Data_Files/ZipPop/"

Pop_by_zip <- readRDS(paste0(Zip_path, "Zipcode_Pop_2022.rds"))

Parishes <- readRDS(paste0(path, "Parishes.rds"))  

Convocations <- readRDS(paste0(path,"Convocations.rds"))  

```

### Read in the proper sheet

```{r read}

df <- readxl::read_excel(paste0(inpath, "2023_HHSemPOWERMapHistoricalDataset.xlsx"),
                         sheet="Zip Code")

# Extract Texas only and January only

df <- df %>% 
  filter(stringr::str_detect(FIPS_Code, "^48.*")) %>% 
  select(Zip_Code, FIPS_Code, County_FIPS_Code, County, 
         Beneficiaries=January_2023_Medicare_Benes,
         DME=January_2023_Power_Dependent_Devices_DME) %>% 
  mutate(County=stringr::str_replace(County, "Mcculloch", "McCulloch")) %>% 
  mutate(County=stringr::str_replace(County, "Mclennan", "McLennan")) %>% 
  mutate(County=stringr::str_replace(County, "Mcmullen", "McMullen"))  

#   Add population by zip and calculate per capita

df <- df %>% 
  inner_join(., Pop_by_zip, by=c("Zip_Code"="Zip")) %>% 
  mutate(PerCap=1000*DME/Pop) %>% 
  filter(County %in% Convocations$County)

```

### Make a map

```{r map}

Counties <- readRDS("/home/ajackson/Dropbox/Rprojects/Curated_Data_Files/Texas_Counties/County_Outlines.rds")
ZCTA <- readRDS("/home/ajackson/Dropbox/Rprojects/Curated_Data_Files/Zipcodes/ZCTA_polygons_2020.rds") %>% 
  filter(stringr::str_detect(ZCTA5CE20, "73301")|
         stringr::str_detect(ZCTA5CE20, "^7[56789].*"))  

df2 <- inner_join(df, ZCTA, by=c('Zip_Code'='ZCTA5CE20')) %>% 
  mutate(Ratio=DME/Beneficiaries) %>%
  filter(Pop>500) %>% 
  sf::st_as_sf() %>% 
  sf::st_make_valid()
df3=df2

tmap::tmap_options(basemaps="OpenStreetMap")

tmap::tmap_mode("view") # set mode to interactive plots

# map <- 
  tmap::tm_shape(df2) + 
  tmap::tm_fill(col = "DME", title = "Power Dependent Devices", alpha=0.5, style="pretty")+
  tmap::tm_borders(lwd=0.2) +
  tmap::tm_shape(df3) +
  tmap::tm_fill(col = "PerCap", title = "Per 1000", alpha=0.5, style="pretty")+
  tmap::tm_borders(lwd=0.2) +
  tmap::tm_shape(Parishes) + 
  tmap::tm_dots()

  # tmap::tm_shape(ZCTA) + 
  # tmap::tm_fill(col = "ZCTA5CE20", title = "Power Dependent Devices", alpha=0.5, style="pretty")+
  # tmap::tm_borders(lwd=0.2) 
```

Maps of each hazard over the whole diocese by convocation

```{r diocese by county}

Convocations <- readRDS(paste0(path,"Convocations.rds")) %>% 
  select(Name) %>% 
  mutate(Label=stringr::str_remove(Name, " Convocation| Region")) %>% 
  mutate(Filename=stringr::str_replace(Label, " ", "_")) %>% 
  sf::st_as_sf()

for (i in 1:11) {
  box <-sf::st_bbox(terrainr::add_bbox_buffer(Convocations[i,], distance=5000)) # 5 kilometers
  Label <- Convocations[i,]$Label
  Filename <- Convocations[i,]$Filename
  
  Base_basemapR <- basemapR::base_map(box, basemap="mapnik", increase_zoom=2)
  print(paste("--------->", i, Label))
  
  tmp <- df2[Convocations[i,],]
  
  Max_DME <- tmp %>% 
    sf::st_crop(box) %>% 
    sf::st_drop_geometry() %>% 
    filter(DME==max(DME)) %>% 
    select(DME)
  
  # Convo_parishes <- Parishes %>% sf::st_crop(box)
  Convo_parishes <- Parishes[Convocations[i,],]
  
  tmp %>% 
    sf::st_crop(box) %>% 
    ggplot() +
    Base_basemapR +
    geom_sf(aes(fill=DME) ,alpha=0.5) +
    scale_fill_gradient(name="# Devices", 
                        na.value = "transparent", 
                        low="white", 
                        high="brown",
                        limits=c(0, Max_DME[[1]])) +
    geom_sf(data=Convo_parishes, show.legend=FALSE) +
    ggsflabel::geom_sf_label_repel(data=Convo_parishes, aes(label=Label), 
                                   size=2, max.overlaps=25, force=80) +
    labs(title=paste(Label, "Convocation"),
         subtitle=paste("Number of power dependent devices per Zip code")) +
    annotate("text", label="
           Data sourced from HHS, Medicare At-Risk Populations, January 2023 
           Map a product of Alan Jackson", 
           x=-Inf, 
           y=-Inf,
           hjust="inward", vjust="inward", size = 2)
  
    ggsave(paste0(output_path, "HHS_DME_",Filename, ".jpg"))
}

```

###   Make a table of # devices in local zipcode

```{r}

inner_join(Parishes, df, by=c("Zip"="Zip_Code")) %>%
  sf::st_drop_geometry() %>% 
  select(Label, City, Convocation, DME, PerCap) %>% 
  mutate(PerCap=signif(PerCap, 2)) %>% 
  arrange(-PerCap) %>% 
  gt() %>% 
  cols_label(
    Label="Church",
    City="City",
    Convocation="Convocation",
    DME="Num Med Dev",
    PerCap="Devices per 1000"
  )
###############   build a real gt table here

# do I want to normalize by population? Yes, add that column.


```




