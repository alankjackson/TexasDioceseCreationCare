---
title: "Analyze FEMA data"
author: "Alan Jackson"
format: html
editor: source
---

## Combine FEMA and church data to analyze

Produce the following:

1.  Map of each hazard by convocation, frequency and annualized occurrence
2.  Table for each parish of Hazard, Frequency, Annualized Occurrence

```{r setup}

library(tidyverse)
library(sf)
library(gt)

googlecrs <- "EPSG:4326"
localUTM <- "EPSG:32615"

path <- "/home/ajackson/Dropbox/Rprojects/TexasDioceseCreationCare/Data/"
output_path <- "/home/ajackson/Dropbox/projects/CeationCareTaskforce/"
Curated_path <- "/home/ajackson/Dropbox/Rprojects/Curated_Data_Files/Texas_Counties/"

Parishes <- readRDS(paste0(path, "Parishes_plus_Census_tracts.rds"))

Census <- readRDS(paste0(path, "Census_data_for_Texas_by_tract.rds"))

Counties <- readRDS(paste0(Curated_path, "County_Outlines.rds")) %>% 
  sf::st_transform(googlecrs)

Convocations <- readRDS(paste0(path,"Convocations.rds")) %>% 
  select(Name) %>% 
  mutate(Label=stringr::str_remove(Name, " Convocation| Region")) %>% 
  sf::st_as_sf()

FEMA <- readRDS(paste0(path, "NRI_Table.rds")) %>% 
  select(Tract=TRACTFIPS, SocVuln=SOVI_SCORE, Resilience=RESL_SCORE, 
         Coastal_Flood_num=CFLD_EVNTS, Coastal_Flood_Freq=CFLD_AFREQ,
         Cold_num=CWAV_EVNTS, Cold_freq=CWAV_AFREQ,
         Drought_num=DRGT_EVNTS, Drought_freq=DRGT_AFREQ,
         Quake_num=ERQK_EVNTS, Quake_freq=ERQK_AFREQ,
         Hail_num=HAIL_EVNTS, Hail_freq=HAIL_AFREQ,
         Heat_num=HWAV_EVNTS, Heat_freq=HWAV_AFREQ,
         Hurricane_num=HRCN_EVNTS, Hurricane_freq=HRCN_AFREQ,
         Ice_num=ISTM_EVNTS, Ice_freq=ISTM_AFREQ,
         Landslide_num=LNDS_EVNTS, Landslide_freq=LNDS_AFREQ,
         Lightning_num=LTNG_EVNTS, Lightning_freq=LTNG_AFREQ,
         River_Flood_num=RFLD_EVNTS, River_Flood_freq=RFLD_AFREQ,
         Wind_num=SWND_EVNTS, Wind_freq=SWND_AFREQ,
         Tornado_num=TRND_EVNTS, Tornado_freq=TRND_AFREQ,
         Wildfire_num=WFIR_EVNTS, Wildfire_freq=WFIR_AFREQ,
         Winter_num=WNTW_EVNTS, Winter_freq=WNTW_AFREQ
         )

FEMA_county <- readRDS(paste0(path, "NRI_Table_Counties.rds")) %>% 
  select(County=COUNTY, SocVuln=SOVI_SCORE, Resilience=RESL_SCORE, 
         Coastal_Flood_num=CFLD_EVNTS, Coastal_Flood_Freq=CFLD_AFREQ,
         Cold_num=CWAV_EVNTS, Cold_freq=CWAV_AFREQ,
         Drought_num=DRGT_EVNTS, Drought_freq=DRGT_AFREQ,
         Quake_num=ERQK_EVNTS, Quake_freq=ERQK_AFREQ,
         Hail_num=HAIL_EVNTS, Hail_freq=HAIL_AFREQ,
         Heat_num=HWAV_EVNTS, Heat_freq=HWAV_AFREQ,
         Hurricane_num=HRCN_EVNTS, Hurricane_freq=HRCN_AFREQ,
         Ice_num=ISTM_EVNTS, Ice_freq=ISTM_AFREQ,
         Landslide_num=LNDS_EVNTS, Landslide_freq=LNDS_AFREQ,
         Lightning_num=LTNG_EVNTS, Lightning_freq=LTNG_AFREQ,
         River_Flood_num=RFLD_EVNTS, River_Flood_freq=RFLD_AFREQ,
         Wind_num=SWND_EVNTS, Wind_freq=SWND_AFREQ,
         Tornado_num=TRND_EVNTS, Tornado_freq=TRND_AFREQ,
         Wildfire_num=WFIR_EVNTS, Wildfire_freq=WFIR_AFREQ,
         Winter_num=WNTW_EVNTS, Winter_freq=WNTW_AFREQ
         )

```

## First add list of census tracts to each convocation

```{r add tracts}

Pos_to_GEOID <- function(Position_list, Census_df){
  return(Census_df$GEOID[Position_list])
}

a <- sf::st_intersects(Convocations, Census, sparse=TRUE)

temp <- Census
temp[6897,] <- temp[6896,]
temp$GEOID[6897] <- 0

Convocations$Tract <- list(0)
for (i in 1:nrow(Convocations)) {
  Convocations$Tract[i] <- list(Pos_to_GEOID(a[[i]], temp))
}

Convocations <- sf::st_as_sf(Convocations)

saveRDS(Convocations, paste0(path, "Convocation_and_tracts.rds"))

```

## Maps by convocation of Frequency and Annual Occurrance

```{r convo}

Control <- tribble(~Freq_var, ~Freq_label, ~Freq_units,
                   "Coastal_Flood_Freq", "Coastal Flooding", "Floods/yr",
                   "Cold_freq", "Cold Waves", "Cold Wave Days/yr",
                   "Drought_freq", "Droughts", "Drought Days/yr",
                   "Quake_freq", "Earthquakes", "Quakes/yr",
                   "Hail_freq", "Hail", "Large Hail events/yr",
                   "Heat_freq", "Heat Waves", "Heat Wave Days/yr",
                   "Hurricane_freq", "Hurricane / T.S.", "Hurricanes/yr",
                   "Ice_freq", "Ice Storms", "Ice Storm Days/yr",
                   "Landslide_freq", "Landslides", "Landslides/yr",
                   "Lightning_freq", "Lightning", "Lightning Strikes/yr",
                   "River_Flood_freq", "River Flooding", "Flood Days/yr",
                   "Wind_freq", "Strong Winds", "Strong Wind Events/yr",
                   "Tornado_freq", "Tornados", "Tornados/yr", 
                   "Wildfire_freq", "Wildfire", "Wildfire Probability/yr",
                   "Winter_freq", "Winter Weather", "Winter Weather Days/yr")

Long_Convo <- Convocations %>% 
  sf::st_drop_geometry() %>% 
  unnest_longer(Tract) %>% 
  filter(Tract != "48071710600") # unoccupied spoil banks in Galveston Bay

Long_Convo <- left_join(Long_Convo, FEMA, by="Tract")

Tract_geoms <- Census %>% 
  select(Tract=GEOID)  

Long_Convo <- Long_Convo %>% 
  mutate(Name=stringr::str_remove(Name, " Convocation| Region")) %>% 
  left_join(., Tract_geoms, by="Tract") %>% 
  st_as_sf()

#   Loop through convocations, and produce maps for each one (a lot of maps)

for (Convo in stringr::str_remove(Convocations$Name, " Convocation| Region")) {
  
  print(Convo)
  
  Convo_parishes <- Parishes %>% 
    mutate(Convocation=stringr::str_remove(Convocation, " Convocation| Region")) %>% 
    filter(stringr::str_equal(Convocation, Convo))
  
  box <- Long_Convo %>%
    filter(Name==Convo) %>% 
    sf::st_bbox() 
  
  Base_basemapR <- basemapR::base_map(box, basemap="mapnik", increase_zoom=2)
    
  for (i in 1:15) {
    
    print(paste("--------->", Control[i,]$Freq_var))
  
    filler <- sym(Control[i,]$Freq_var)
    
    max_val <- max(sf::st_drop_geometry(Long_Convo[Control[i,]$Freq_var]), na.rm = TRUE)
      
    
    Long_Convo %>% 
      filter(Name==Convo) %>% 
      ggplot() +
      Base_basemapR +
      geom_sf(aes(fill=!!filler) ,alpha=0.5) +
      scale_fill_gradient(Control[i,]$Freq_units, 
                          na.value = "transparent", 
                          low="white", 
                          high="blue",
                          limits=c(0, max_val)) +
      geom_sf(data=Convo_parishes, show.legend=FALSE) +
      ggsflabel::geom_sf_label_repel(data=Convo_parishes, aes(label=Label), 
                                     size=2, max.overlaps=20, force=80) +
      labs(title=paste("FEMA", Control[i,]$Freq_label,"Frequency", Convo, "Convocation "),
           subtitle=paste("Number of expected", Control[i,]$Freq_units, "per census tract")) +
      annotate("text", label="
             Data sourced from FEMA, National Risk Index, March 2023 
             Map a product of Alan Jackson", 
             x=-Inf, 
             y=-Inf,
             hjust="inward", vjust="inward", size = 2)
    
      ggsave(paste0(output_path, "FEMA_Risk_",Control[i,]$Freq_var, "_", 
                    paste(Convo, sep="_"), "_.jpg"))
  }
}

```

## Interactive map of diocese to trouble shoot the data

```{r trouble shoot}

tmap::tmap_options(basemaps="OpenStreetMap")

tmap::tmap_mode("view") # set mode to interactive plots

tmap::tm_shape(Long_Convo) + 
    #tmap::tm_sf(col="ConvoColor", alpha=0.3) +
  tmap::tm_fill(col = "Landslide_freq", title = "Landslides", alpha=0.3, style="pretty")+
  tmap::tm_borders() 


```

## Maps of Diocese

Maps of each hazard over the whole diocese

```{r diocese}

box <- Long_Convo %>%
  sf::st_bbox() 

Base_basemapR <- basemapR::base_map(box, basemap="mapnik", increase_zoom=2)
  
for (i in 1:15) {
  
  print(paste("--------->", Control[i,]$Freq_var))

  filler <- sym(Control[i,]$Freq_var)
  
  max_val <- max(sf::st_drop_geometry(Long_Convo[Control[i,]$Freq_var]), na.rm = TRUE)
    
  
  Long_Convo %>% 
    ggplot() +
    Base_basemapR +
    geom_sf(aes(fill=!!filler) ,alpha=0.5) +
    scale_fill_gradient(Control[i,]$Freq_units, 
                        na.value = "transparent", 
                        low="white", 
                        high="blue",
                        limits=c(0, max_val)) +
    geom_sf(data=Parishes, show.legend=FALSE) +
    # ggsflabel::geom_sf_label_repel(data=Convo_parishes, aes(label=Label), 
    #                                size=2, max.overlaps=20, force=80) +
    labs(title=paste("FEMA", Control[i,]$Freq_label,"Frequency"),
         subtitle=paste("Number of expected", Control[i,]$Freq_units, "per census tract")) +
    annotate("text", label="
           Data sourced from FEMA, National Risk Index, March 2023 
           Map a product of Alan Jackson", 
           x=-Inf, 
           y=-Inf,
           hjust="inward", vjust="inward", size = 2)
  
    ggsave(paste0(output_path, "FEMA_Risk_",Control[i,]$Freq_var, "_Diocese_.jpg"))
}



```

## Maps of Diocese by county

Maps of each hazard over the whole diocese by convocation

```{r diocese by county}

Diocese <- Convocations %>% 
  select(-Tract, -Label)

a <- sf::st_intersects(Diocese, Counties, sparse=TRUE)  

Diocese <- Counties[unique(unlist(a)),] %>% 
  left_join(., FEMA_county, by=join_by(CNTY_NM == County))

box <- Diocese %>%
  sf::st_bbox() 

Base_basemapR <- basemapR::base_map(box, basemap="mapnik", increase_zoom=2)
  
for (i in 1:15) {
  
  print(paste("--------->", Control[i,]$Freq_var))

  filler <- sym(Control[i,]$Freq_var)
  
  max_val <- max(sf::st_drop_geometry(Diocese[Control[i,]$Freq_var]), na.rm = TRUE)
    
  
  Diocese %>% 
    ggplot() +
    Base_basemapR +
    geom_sf(aes(fill=!!filler) ,alpha=0.5) +
    scale_fill_gradient(Control[i,]$Freq_units, 
                        na.value = "transparent", 
                        low="white", 
                        high="blue",
                        limits=c(0, max_val)) +
    geom_sf(data=Parishes, show.legend=FALSE) +
    # ggsflabel::geom_sf_label_repel(data=Convo_parishes, aes(label=Label), 
    #                                size=2, max.overlaps=20, force=80) +
    labs(title=paste("FEMA", Control[i,]$Freq_label,"Frequency"),
         subtitle=paste("Number of expected", Control[i,]$Freq_units, "per county")) +
    annotate("text", label="
           Data sourced from FEMA, National Risk Index, March 2023 
           Map a product of Alan Jackson", 
           x=-Inf, 
           y=-Inf,
           hjust="inward", vjust="inward", size = 2)
  
    ggsave(paste0(output_path, "FEMA_Risk_",Control[i,]$Freq_var, "_Diocese_County.jpg"))
}



```

## Tables for each parish

```{r tables}

#   First Add data by county as some measures are not appropriate for tract

Hazard_names <- tribble(~from, ~to,
                        "Lightning_freq",	 "Lightning strikes",
                        "Drought_freq",	   "Drought (Days)",
                        "Hail_freq",	     "Hail Storms",
                        "Wind_freq",	     "Wind Storms",
                        "Winter_freq",	   "Winter Storms",
                        "River_Flood_freq",	"River Flooding*",
                        "Ice_freq",	        "Ice Storms",
                        "Heat_freq",	      "Heat Waves (Days)",
                        "Tornado_freq",	    "Tornadoes",
                        "Cold_freq",        "Cold Waves (Days)",
                        # "Landslide_freq",	  "Landslides*",
                        "Hurricane_freq",	  "Hurricanes",
                        "Wildfire_freq",	  "Wildfire",
                        # "Quake_freq",	      "Earthquake",
                        "Coastal_Flood_Freq", "Coastal Flooding*") %>% 
  arrange(from)

for (i in 1:162) {
  
  Table_to_be <- tribble(~Hazard, ~Frequency, ~Source)
  County <- Parishes[i,]$County
  
  FEMA_tract <- FEMA %>% 
    select(Tract, SocVuln, Resilience, Coastal_Flood_Freq, River_Flood_freq)
  FEMA_cty <- FEMA_county %>% 
    select(County, SocVuln_cty=SocVuln, Resil_cty=Resilience, Cold_freq, Drought_freq,
           Hail_freq, Heat_freq, Hurricane_freq, Ice_freq, Lightning_freq,
           Wind_freq, Tornado_freq, Wildfire_freq, Winter_freq)
  
  foo <- Parishes[i,] %>% 
    left_join(., FEMA_tract, by="Tract") %>% 
    left_join(., FEMA_cty, by="County") %>% 
    mutate(Coastal_Flood_Freq=replace_na(Coastal_Flood_Freq, 0)) %>% 
    sf::st_drop_geometry() %>% 
    select(-ID, -Name, -Description, -Convocation, -Tract, -Nearby, -County, -SocVuln, -Resilience,
           -SocVuln_cty, -Resil_cty) 
  
  Label <- foo$Label
  City <- foo$City
  
  foo <-
    foo %>% 
    select(-Label, -City) %>% 
    pivot_longer(cols=ends_with("freq"), names_to="Hazard", values_to="Frequency") %>% 
    arrange(Hazard)
    # mutate(Hazard=stringr::str_replace(Hazard, ))
    # mutate(Hazard = ifelse(stringr::str_detect(from, i), i, NA))
    
    foo$Hazard <- Hazard_names$to
      
    table <- foo %>% 
    arrange(Hazard) %>% 
      # filter(Frequency>0.001) %>% 
    gt() %>% 
    tab_header(
      title = md(paste0("**FEMA Hazards: ", Label, ", ", City, "**")),
      subtitle="Annual frequency (or days/year) by Census Tract(*) or County"
    ) %>% 
    tab_source_note(
      source_note="Source: https://hazards.fema.gov/nri/") %>% 
    fmt_number(
      columns = 2,
      decimals = 2
    ) %>% 
    tab_options(
      column_labels.font.weight = 'bold'
    )
    
  gtsave(table, paste0(output_path, Label, "_", City, "_FEMA_table.png"))
}
  
```
